<?xml version="1.0"?>

<!-- Works with Ant 1.7.0 and higher -->
<project default="main" basedir=".">
   
   <target name="main" depends="copy_and_sign_all_plugins, git_checkout_master, git_config, git_commit, git_push_files" />

   <target name="copy_and_sign_all_plugins" >
		<sequential>
			<!-- copy the plugins to be signed to a temporary folder -->
			 <copy todir="plugins" includeemptydirs="false">
				<fileset dir="${plugin.source.dir}"/>
			</copy>
			<!-- sign all plugins -->
			 <sign_all_plugins pluginsFolder="${plugins.folder}" />
			 
			 <!-- copy all files back -->
			 <move todir="${plugin.source.dir}" includeemptydirs="false">
				<fileset dir="plugins"/>
			</move>
		</sequential>
	</target>
	
    
    <target name="git_checkout_master" >
    	<git command = "checkout" dir="${publish.destination.dir}">
    		<args>
        		<arg value = "master" />
    		</args>
		</git>
    </target>
    
    <target name="git_config" >
    	<git command = "config" dir="${publish.destination.dir}">
    		<args>
        		<arg value = "--global" />
        		<arg value = "user.name" />
        		<arg value = "globis-jenkins" />
    		</args>
		</git>
    	<git command = "config" dir="${publish.destination.dir}">
    		<args>
        		<arg value = "--global" />
        		<arg value = "user.email" />
        		<arg value = "pdemeyer@outlook" />
    		</args>
		</git>
    </target>
    
    <target name="git_commit" >
    	<git command = "commit" dir="${publish.destination.dir}">
    		<args>
        		<arg value = "--all" />
        		<arg value = "-m" />
        		<arg value = "${publish.tag}" />
        		<arg value = "--author='globis-jenkins &lt;pdemeyer@outlook.be&gt;'" />
    		</args>
		</git>
    </target>
    
    <target name="git_add_files" >
    	<git command = "add" dir="${publish.destination.dir}">
    		<args>
        		<arg value = "${publish.files.pattern}" />
    		</args>
		</git>
    </target>
    
    <target name="git_tag" >
    	<git command = "tag" dir="${publish.destination.dir}">
    		<args>
        		<arg value = "${publish.tag}" />
    		</args>
		</git>
    </target>
		
    <target name="git_push_tags" >
    	<git command = "push"  dir="${publish.destination.dir}">
    		<args>
        		<arg value = "--tags" />
    		</args>
		</git>
    </target>
    
		
    <target name="git_push_files" >
    	<git command = "push"  dir="${publish.destination.dir}">
    		<args>
        		<arg value = "--all" />
    		</args>
		</git>
    </target>
    
    <target name="escs_73" >
        <copy-servoy-files-with-version-number-on-drop-location solutionNames="${mobile_service_solutions}" versionLabel="${version_label}" dropLocationDir="${drop_location}" failOnError="false"/>      
    </target>
    
    
    
    <macrodef name="sign_all_plugins">
        <attribute name="pluginsFolder"/>
        <attribute name="failOnError" default="true"/>
        <sequential>
            <!-- now we are ready to start the workspace exporter -->
            <echo level="info" message="Using equinox launcher jar: ${equinox.launcher.jar.location_property}" />
			
			
            <latest_jar pathName="jarsigner.jar.location" dir="libs" includes="**/signtester.jar"/>

            <java   classname="com.servoy.jarsigner.SignerTest"
                    classpathref="jarsigner.jar.location"
                    failonerror="#{failOnError}"
                    resultproperty="export.result"
                    fork="true">
					<!--
                <jvmarg value="-Xms40m" />
                <jvmarg value="-Xmx512m" />
                <jvmarg value="-XX:MaxPermSize=256M" />
                <jvmarg value="-Dosgi.configuration.cascaded=false" />
				-->
                <jvmarg value="-Dcodebase=*" />

                <!-- add here any of the optional arguments supported by the exporter; see 'export -help' for more info; for example: -->
                <!--arg value="-help" /-->
                <arg value="libs/globis.jks" />
                <arg value="9lo815AAl57" />
                <arg value="ov2s3Wv390Q463y" />
                <arg value="globisnv" />
                <arg value="overwrite" />
                <arg value="ws" />
                <arg value="-i18n" />
                <arg value="-users" />
                <arg value="-tables" />
                <arg value="-modules" />
            </java>
        </sequential>
    </macrodef>
    
    
    <macrodef name = "git">
    <attribute name="failOnError" default="true"/>
    <attribute name = "command" />
    <attribute name = "dir" default = "" />
    <element name = "args" optional = "true" />
    <sequential>
        <echo message = "git @{command} @{dir} @{args}" />
        <exec executable = "git" dir = "@{dir}">
            <arg value = "@{command}" />
            <args/>
        </exec>
    </sequential>
</macrodef>

    <macrodef name="latest_jar">
        <attribute name="pathName"/>
        <attribute name="propertyName" default="@{pathName}_property"/>
        <attribute name="dir"/>
        <attribute name="includes"/>
        <sequential>
            <!-- store path to newest JAR -->
            <path id="@{pathName}">
                <first count="1">
                    <sort>
                        <fileset dir="@{dir}" includes="@{includes}" />
                        <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
                            <date />
                        </reverse>
                    </sort>
                </first>
            </path>

            <!-- create a property as well -->
            <property name="@{propertyName}" refid="@{pathName}" />
        </sequential>
    </macrodef>

    
</project>